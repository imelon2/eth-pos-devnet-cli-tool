version: "3.9"
services:
  create-beacon-chain-genesis:
    image: "gcr.io/prysmaticlabs/prysm/cmd/prysmctl:latest"
    command:
      - testnet
      - generate-genesis
      - --fork=${FORK_VERSION}
      - --num-validators=64
      # - --genesis-time-delay=15
      - --output-ssz=${BEACON_GENESIS_ROOT}
      - --chain-config-file=${BEACON_CONFIG_ROOT}
      - --geth-genesis-json-in=${GENESIS_ROOT}
      - --geth-genesis-json-out=${GENESIS_ROOT}
    volumes:
      - ${V_CONFIG_DIR}:${CONFIG_DIR}
    networks:
      - pos_network

  geth-genesis:
    image: "ethereum/client-go"
    command: --datadir=${EXECUTION_ROOT}/data init ${GENESIS_ROOT}
    volumes:
      - ${V_CONSENSUS_ROOT}:${CONSENSUS_ROOT}
      - ${V_EXECUTION_ROOT}:${EXECUTION_ROOT}
      - ${V_CONFIG_DIR}/genesis.json:${GENESIS_ROOT}
    depends_on:
      create-beacon-chain-genesis:
        condition: service_completed_successfully
    networks:
      - pos_network

  beacon-chain:
    container_name: beacon-chain-${CONTAINER_SUFFIX}
    image: "gcr.io/prysmaticlabs/prysm/beacon-chain:stable"
    command:
      - --datadir=${CONSENSUS_ROOT}/beacondata
      - --genesis-state=${BEACON_GENESIS_ROOT}
      - --interop-eth1data-votes
      - --chain-config-file=${BEACON_CONFIG_ROOT}
      - --contract-deployment-block=0
      - --chain-id=${CHAIN_ID}
      - --rpc-host=0.0.0.0
      - --rpc-port=${BEACON_RPC_PORT}
      - --grpc-gateway-host=0.0.0.0
      - --grpc-gateway-port=${BEACON_GRPC_PORT}
      - --execution-endpoint=http://geth:${GETH_AUTH_RPC_PORT}
      - --accept-terms-of-use
      - --jwt-secret=${JWTSECRET_ROOT}
      - --suggested-fee-recipient=${MINER_ADDRESS}
      - --enable-debug-rpc-endpoints
      - --monitoring-port=${BEACON_MONITORING_PORT}
      - --monitoring-host=0.0.0.0
      - --pprofport=${BEACON_PPROF_PORT}
      - --force-clear-db
      - --minimum-peers-per-subnet=0
      - --p2p-tcp-port=${P2P_TCP_PORT}
      - --p2p-udp-port=${P2P_UDP_PORT}
      - --peer=${PEER:-}
      - --checkpoint-sync-url=${CHECKPOINT_SYNC_URL:-}
      - --genesis-beacon-api-url=${CHECKPOINT_SYNC_URL:-}
      - --bootstrap-node=${BOOT_STRAP_NODE:-}
      - --min-sync-peers=0
      - --verbosity=debug
      # - --restore-source-file=${CONSENSUS_ROOT}/bea/backup
      # - --restore-target-dir=${CONSENSUS_ROOT}/beacondata
    ports:
      - ${BEACON_HOST}:${BEACON_RPC_PORT}:${BEACON_RPC_PORT}
      - ${BEACON_HOST}:${BEACON_GRPC_PORT}:${BEACON_GRPC_PORT}
      - ${BEACON_HOST}:${BEACON_MONITORING_PORT}:${BEACON_MONITORING_PORT}
      - ${BEACON_HOST}:${BEACON_PPROF_PORT}:${BEACON_PPROF_PORT}
      - ${BEACON_HOST}:${P2P_TCP_PORT}:${P2P_TCP_PORT}
      - ${BEACON_HOST}:${P2P_UDP_PORT}:${P2P_UDP_PORT}/udp
      # - 9090:9090
    volumes:
      - ${V_CONFIG_DIR}:${CONFIG_DIR}
      - ${V_CONSENSUS_ROOT}:${CONSENSUS_ROOT}
      - ${V_EXECUTION_ROOT}:${EXECUTION_ROOT}
    depends_on:
      create-beacon-chain-genesis:
        condition: service_completed_successfully
    logging:
      driver: "json-file"
      options:
        max-size: "1g"
        max-file: "3"
    networks:
      - pos_network

  geth:
    container_name: geth-${CONTAINER_SUFFIX}
    image: "ethereum/client-go"
    command:
      - --datadir=${EXECUTION_ROOT}/data
      - --syncmode=full
      - --networkid=${CHAIN_ID}
      - --port=${GETH_PORT}
      - --http
      - --http.api=eth,net,txpool
      - --http.addr=0.0.0.0
      - --http.port=${GETH_HTTP_PORT}
      - --http.corsdomain=*
      - --http.vhosts=*
      - --ws
      - --ws.api=eth,net,web3
      - --ws.addr=0.0.0.0
      - --ws.port=${GETH_WS_PORT}
      - --ws.origins=*
      - --authrpc.vhosts=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.port=${GETH_AUTH_RPC_PORT}
      - --authrpc.jwtsecret=${JWTSECRET_ROOT}
      - --nodiscover
      - --bootnodes=${BOOTNODES:-}
      - --metrics
      # - --maxpendpeers=$NUM_NODES
      # - --allow-insecure-unlock
      # - --unlock=${MINER_ADDRESS}
      # - --password=${PASSWORD_ROOT}
    ports:
      - ${GETH_HOST}:${GETH_PORT}:${GETH_PORT} # AUTH RPC
      - ${GETH_HOST}:${GETH_AUTH_RPC_PORT}:${GETH_AUTH_RPC_PORT} # AUTH RPC
      - ${GETH_HOST}:${GETH_HTTP_PORT}:${GETH_HTTP_PORT} # RPC
      - ${GETH_HOST}:${GETH_WS_PORT}:${GETH_WS_PORT} # WS
    volumes:
      - ${V_EXECUTION_ROOT}:${EXECUTION_ROOT}
      - ${V_CONFIG_DIR}:${CONFIG_DIR}
    depends_on:
        geth-genesis:
          condition: service_completed_successfully
        beacon-chain:
          condition: service_started
    logging:
      driver: "json-file"
      options:
        max-size: "1g"
        max-file: "3"
    networks:
      - pos_network

  validator:
    container_name: validator-${CONTAINER_SUFFIX}
    image: "gcr.io/prysmaticlabs/prysm/validator:stable"
    command:
      - --datadir=${CONSENSUS_ROOT}/validatordata
      - --chain-config-file=${BEACON_CONFIG_ROOT}
      - --beacon-rpc-provider=beacon-chain:${BEACON_RPC_PORT}
      - --accept-terms-of-use
      - --interop-num-validators=64
      - --enable-db-backup-webhook=true
      - --rpc-host=0.0.0.0
      - --rpc-port=${PRYSM_VALIDATOR_RPC_PORT}
      - --grpc-gateway-host=0.0.0.0
      - --grpc-gateway-port=${PRYSM_VALIDATOR_GRPC_GATEWAY_PORT}
      - --monitoring-host=0.0.0.0
      - --monitoring-port=${PRYSM_VALIDATOR_MONITORING_PORT}
      - --force-clear-db
      # - --interop-start-index=0
      # - --db-backup-output-dir=${CONSENSUS_ROOT}/vali
    ports:
      - ${VALIDATOR_HOST}:${PRYSM_VALIDATOR_RPC_PORT}:${PRYSM_VALIDATOR_RPC_PORT}
      - ${VALIDATOR_HOST}:${PRYSM_VALIDATOR_GRPC_GATEWAY_PORT}:${PRYSM_VALIDATOR_GRPC_GATEWAY_PORT}
      - ${VALIDATOR_HOST}:${PRYSM_VALIDATOR_MONITORING_PORT}:${PRYSM_VALIDATOR_MONITORING_PORT}
    volumes:
      - ${V_CONSENSUS_ROOT}:${CONSENSUS_ROOT}
      - ${V_CONFIG_DIR}:${CONFIG_DIR}
    depends_on:
      beacon-chain:
        condition: service_started
    logging:
      driver: "json-file"
      options:
        max-size: "1g"
        max-file: "3"
    networks:
      - pos_network

networks:
  pos_network:
    external: true
#   ###############################################################################
#   ###                               blockscout                                ###
#   ###############################################################################   
#   postgres:
#     image: postgres:13.6
#     restart: always
#     container_name: "postgres"
#     environment:
#       POSTGRES_PASSWORD: ""
#       POSTGRES_USER: "postgres"
#       POSTGRES_HOST_AUTH_METHOD: "trust"
#     volumes:
#       - "postgres-data:/var/lib/postgresql/data"
#     ports:
#       - "5432:5432"

#   blockscout:
#     depends_on:
#       - postgres
#       - geth
#     image: blockscout/blockscout:latest
#     restart: always
#     container_name: "blockscout"
#     links:
#       - postgres:database
#     command:
#       - /bin/sh
#       - -c
#       - |
#         bin/blockscout eval "Elixir.Explorer.ReleaseTasks.create_and_migrate()"
#         node init/install.js postgres 5432
#         bin/blockscout start
#     extra_hosts:
#       - "host.docker.internal:host-gateway"
#     env_file:
#       - ./blockscout/common-blockscout.env
#     environment:
#       ETHEREUM_JSONRPC_VARIANT: "geth"
#       ETHEREUM_JSONRPC_HTTP_URL: geth:${GETH_HTTP_PORT}
#       COIN: ETH
#       NETWORK: ${NETWORK_NAME}
#       SUBNETWORK : ${SUBNETWORK}
#       DATABASE_URL: postgresql://postgres:@postgres:5432/blockscout
#       PORT: ${BLOCKSCOUT_PORT}
#     ports:
#       - ${BLOCKSCOUT_HOST}:${BLOCKSCOUT_PORT}:${BLOCKSCOUT_PORT}

# volumes:
#   postgres-data: